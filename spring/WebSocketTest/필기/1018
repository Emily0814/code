- com.test.web.controller > "Ex08Controller.java"
- "com.test.web.service" > "TestService.java"
- views > "ex08.jsp"
- 어노테이션을 사용한 의존 주입


MyBatis > iBatis(구이름)
- DB 연동
- JDBC > 확장판


MyBatis or JPA


Spring + Web + MyBatis

1. 새 프로젝트
- New > Spring Legacy Project
- Project name: "MyBatisTest"
- Templates: Spring MVC Project
- Enter a top-level-package: "com.test.mybatis"

~. 1017 필기보고 설정

6. ojdbc6.jar 등록

7. 인코딩 필터 등록
 	<!-- GET/POST 데이터 인코딩 처리 -->
  	<filter>
  		<filter-name>encoding</filter-name>
  		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  		<init-param>
  			<param-name>encoding</param-name>
  			<param-value>UTF-8</param-value>
  		</init-param>
  	</filter>
  	<filter-mapping>
  		<filter-name>encoding</filter-name>
  		<!-- <url-pattern>/</url-pattern> -->
  		<servlet-name>appServlet</servlet-name>
  	</filter-mapping>
 
8. DB 설정 테스트
- 위의 DB 관련 라이브러리가 제대로 설치되었는지 확인하는 작업

8.1 JDBC 연결 테스트
- src/test/java > "com.test.mybatis.persistence" > "JDBCTest.java"


Connection
- DB 작업(insert)
- DB 통신 > TCP(O), UDP(O) 
1. DB 연결 > 3-way handshake 발생
	a. C -> S : SYN 메세지 전송(안녕하세요. 연결하고 싶어요~)
	b. S -> C : SYN ACK 메세지 전송(네 저도 연결할께요~)
	b. C -> S : ACK 메세지 전송(넵 알겠습니다. 연결합니다!!) 
2. SQL 실행
3. DB 연결 종료 > 4-way handshake 발생
	a. C - S : FIN 메세지 전송(이제 연결을 끊을래요~)
	b. S - C : ACK 메세지 전송(알겠습니다. 잠시만 기다려주세요~)
	c. C - S : FIN 메세지 전송(저도 정리했습니다. 연결을 끊겠습니다~)
	b. S - C : ACK 메세지 전송(네 알겠습니다. 잘가세요~)


DBCP 종류
	1. Commons DBCP > 스프링 이전 버전에 기본 탑재
	
	
	2. HikariCP > 스프링 부트 2.X 기본 탑재

9. DBCP 설정
	9.1 Commons DBCP
		- pom.xml > 의존성 추가
		- root-context.xml > 설정
	9.2 Commons DBCP 단위 테스트
		- 설정 & 연결 테스트
		- com.test.java.persistence > "DBCPTest.java"
		
	9.3 HikariCP
		- pom.xml > 의존성 추가
		- root-context.xml > 설정
		
	9.4 HikariCP 단위 테스트
		- 설정 & 연결 테스트
		- com.test.java.persistence > "DBCPTest.java"
		
10. MyBatis
	- 영속성 계층(데이터베이스 조작)
	- JDBC 역할
	- SQL Mapping Framework 	> SQL의 실행 결과를 객체지향으로 매핑해준다.
	- SQL를 자바와 분리(***)	> 기존 방식(SQL > 자바내의 문자열 작성)
								> MyBatis 방식 > SQL을 별도의 XML에 작성
	
	10.1 MyBatis를 스프링에 적용하는 방법
		a. XML 매퍼를 사용하는 방법	> 오늘 수업할 예정
		b. 인터페이스 매퍼를 사용하는 방법 > 다음주에 수업할 예정
		
	10.2 MyBatis 설정
		a. pom.xml > 의존성 4개 추가
		b. root-context.xml > 설정 추가
		c. 매퍼 파일 설정
	10.3 단위 테스트
		- "MyBatisTest.java"
		src.test.

11. Log4j
	11.1 pom.xml 의존성 추가
	<!-- Log4j -->		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
			<version>1.16</version>
		</dependency>
	11.2 src/main/resources > log4jdbc.log4j2.properties
	11.3 src/main/resources > log4j.xml 일부 수정
	11.4 root-context.xml > 일부 수정




=======================================================================================


파일
- "com.test.mybatis.controller" > "MyBatisController.java"

- "com.test.mybatis.dao" > "MyBatisDAO.java"
- "com.test.mybatis.dto" > "AddressDTO.java"

- views > "list.jsp"
		> "add.jsp"
		
- MyBatisTest > script.sql

- src/main/resource > "mapper" > "mybatis.xml"	//매퍼 파일(SQL 작성)
- src/main/resource > "config" > "mybatis-config.xml"


























