[sql developer]

select * from tabs;

select * from tblAddress;	--회원(부모)
select * from tbl

오늘 jpa 프로젝트에서 메서드 만들고 코드 작성 더 했는데, 못 따라가서 에러남.
강사님 것 가져가서 나중에 에러 잡자~


Servlet/JSP
- 서블릿 생명주기 > 그림(수업시간에 설명하신 그림)

스프링
- 스프링 빈 생명 주기 > 그림
- DI 정의 or 개념	> 의존 주입 관련 질문
- loC
- AOP
- Servlet/JSP MVC vs Spring MVC(자동화)
- Spring Security > 구현 경험?
- 스프링 빈 만드는 방법 > XML, 어노테이션, 자바 3가지

MyBatis
- JDBC 비교
- 반복되는 코드 제거
- SQL > XML 파일 독립 관리

스프링부트
- 스프링 vs 스프링 부트
	- 자동 설정(Auto Configuration)
	- 의존성 > 개별 + 스프링 부트 스타터
	- 보일러플레이트 코드 많이 제거
	- 초기 설정 비용 절감 + 추가 생성 비용 절감

filter와 intercepter의 차이
- 요청과 응답 시 개입되는 중간 관문
- filter > 톰캣의 요청 응답에 반응
- intercepter > 스프링의 요청 응답에 반응

DI 방법(3가지)
- 필드 주입: final 선언 불가능	> 사용자 개입 불가능
- 생성자 주입: final 선언 가능	> 사용	> 처음 1회 호출 가능, 재호출(X) > 사용
- Setter 주입: final 선언 불가능 > 재호출 가능(X)

Spring Security 인증 절차

카프카
- Apache Kafka
- 파이프 라인, 스트리밍 분석, 데이터 통합 및 미션 크리티컬 애플리케이션을 위해 설계된 고성능 분산 이벤트 스트리밍 서비스이다.
- 메세지 서비스
- 링크드인에서 만듦


기존 데이터 시스템
- Peer to peer > P2P
- 하나의 컴퓨터와 또 하나의 컴퓨터가 서로 메시지(데이터)를 주고 받을 때
- 데이터 주고 받는 노드간의 연결 지속
	- 동기 통신(실시간 연결) > WebSocket
- REST API
- Web Socket
- SOAP
- RTC

기존 방식의 문제점
- 네트워크 장애 > 데이터 손실
- 수신측 환경 장애 > 데이터 손실
- 1:1 관계 > 송신측 or 수신측 변화 > 대응 비용 발생

분산형 데이터 
- 1대1 관계, 송신측 OR 수신측 변화 > 대응 비용 발생

장점
	- 보내는 쪽과 받는 쪽의 관계 > 유연
	- 데이터 유실을 방지 > 안전하게 메시지를 전달
	- 노드간의 독립성 유지 > MSA(마이크로 서비스 아키텍쳐)
	
카프카 권장사항
- 메시지 브로커 > PC 1대(CPU 16코어, 32GB, 128GB) x 3개
- 프로듀서 1대, 컨슈머 2~3대
- 도커 > 도커 컴포즈

제대로 수업하려면 한달은 해야되서;; 수업 못 함.. 또한 어느 정도 실력이 있는 개발자가 수업을 들어야 한다고 함.
개념 정도만 알아두자~

강사님이 작성하신 것 다 못...씀... 집중안돼;;;




























