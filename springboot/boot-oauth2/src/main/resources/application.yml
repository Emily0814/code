spring:
  application:
   name:
    boot-oauth2

  datasource:
      driver-class-name: oracle.jdbc.OracleDriver
      url: jdbc:oracle:thin:@localhost:1521/xe
      username: springboot
      password: java1234
  
  thymeleaf:
        cache: false

  # JPA 설정
  jpa:
      database: oracle
      generate-ddl: false
      hibernate:
       ddl-auto: none
       naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      show-sql: true # 자동 생성된 SQL을 로그에 출력
      properties:
        hibernate:
          format_sql: true # SQL을 이쁘게

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: EXIojetaaMN05UloVHt2
            client-secret: lvgOJjQ39t
            redirect-uri: http://localhost:8090/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email
          google:
            client-name: google
            client-id: 1041401628713-vt4uv9okqu7lftsrdfi9395il1k58050.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8090/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile, email
        provider: 
          naver: #구글은 정보가 이미 들어있고 네이버같은 국내 사이트는 이런 식으로 등록을 해야함
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
            



server:
  port: 8090