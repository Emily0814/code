ToyProject > toy + web.xml(O)

1. 주제
	- 기본 업무 구현

2. 요구분석
	- 회원 관리
	- 게시판 구현(***)
	- 기타 등등

3. 페이지 구성(관계도)
	- toy.drawio
	
4. 화면 설계
	- 생략
	
5. 스토리보드
	- 생략

6. 데이터베이스
	- ERD
	
7. 스크립트
	- DDL, DML
	- 기초 데이터 / 더미 데이터
	- ToyProject > "script.sql"
8. 구현
	- 패키지
		- "com.test.toy": 메인 패키지
			- "Index.java": 시작 페이지
			- "Template.java": 템플릿 페이지
			
		- "com.test.toy.user": 회원
			- "Register.java": 회원가입
			- "Unregister.java": 회원 탈퇴
			- "Login.java": 로그인
			- "Logout.java": 로그아웃
			- "Info.java": 회원 정보
			
		- "com.test.toy.user.repository": DB(DAO)
			- "UserDAO.java"
			
		- "com.test.toy.user.model": DB(DTO)
			- "UserDTO.java"
	
	- 뷰(webapp > WEB-INF >
		- "views"
			- "index.jsp"
			- "template.jsp"
		- views > "user"
					- "register.jsp"
					- "unregister.jsp"
					- "login.jsp"
					- "logout.jsp"
					- "info.jsp"
	- 공통 요소 & 리소스
		- views > "inc"
					- "asset.jsp"
					- "header.jsp"
		- webapp > "asset"
						> "css"
							- "main.css"
						> "js"
							- "main.js"
						> "pic"
	
	- 라이브러리
		- lib
			- ojdbc6.jar
			- util.jar
			- jstl-1.2.jar
			- cos.jar
			- json-simple.jar
			- lombok.jar		
			
	- 패키지
		- "com.test.toy.filter"		
			- "EncodingFilter.java"	
			
		- "com.test.toy.test"
			- "DAOTest.java"
		
		- "com.test.toy.util"
			- "OutputUtil.java"	
			
	
[나의 필기]
- 게시판 만드는 수준으로 만들어라 > 연습하자~
- draw.io 파일 다운로드 > 파란색은 뷰를 갖지 않는 페이지 > 틈틈히 보면서 확인할 예정~

공백에 터미널 누르고 > java -jar lombok.jar 입력 > jar 파일 실행 
Specify location > 이클립스 파일 찾고 select > install > 끝 
class > dev > eclipse > lombok.jar 있는지 확인
class > dev > eclipse > eclipse.ini 메모장 열어서 확인해보면 맨 밑에 -javaagent:C:\class\dev\eclipse\lombok.jar 생성됨 확인
- 만약에 lombok이 실행되지 않는다면 eclipse.ini 들어가서 위에 문구 입력하면 끝
- lombok이 @getter, @setter하면 만들어줌  > 소스 눌러서 getter,setter 만들면 필드가 추가될때마다 신경써야되나 lombok으로 하면 자동 생성됨, 기본적으로 getter, setter 같이 만듦

- 내가 톰캣 연결한 것 처럼 jUnit 라이브러리 환경설정