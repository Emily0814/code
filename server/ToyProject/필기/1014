HTML 태그 처리
- <tag> > &lt;tag&gt;

사용자 입력 데이터 > (가공 + 과정) > 데이터베이스 저장
- ***** 사용자가 입력한 데이터는 수정없이 그래도 보관

[가공 시점]
1. 데이터베이스에 저장하기 전 > 가공 (XXXXXXXXXXXXXXXXXXXXXXX)
2. 출력하기(사용하기) 전 > 가공 (**************************)


댓글이 달린 게시물 삭제
1. 게시물 삭제 > 댓글 전부 삭제 (댓글 먼저 delete)
2. 게시물 삭제 > 댓글 존재 > 게시물 삭제 거부	(댓글 select 먼저)


답변형 게시판
- thread, depth > 값을 계산하는 규칙

1. 새글 쓰기
	a. 현존하는 모든 게시물 중에서 가장 큰 thread 값을 찾아서 그 값에 +1000을 한 값을 새글의 thread 값으로 넣는다.
	b. 새글의 depth 값은 0을 넣는다.

2. 답변글 쓰기
	a. 현존하는 모든 게시물의 thread 값을 대상으로, 현재 작성 중인 답변글의 부모글 thread 값보다 작고, 이전 새글의 thread 값보다 큰 thread를 모두 찾아서 -1을 한다.
	b. 답변글의 thread 값은 부모글의 thread - 1을 넣는다.
	c. 답변글의 depth 값을 부모글의 depth + 1을 넣는다.

답변글이 달린 글의 삭제
1. 전부 지운다.
2. 못 지운다.
3. 삭제한다. > update

첨부 파일


